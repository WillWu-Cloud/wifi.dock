{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","theme.js","aws-exports.js","MQTTDisplay.js","components/DevicesPage.js","graphql/queries.js","graphql/mutations.js","App.js","reportWebVitals.js","index.js","aws-iot-configuration.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Bootstrap","container","fontWeight","formContainer","textAlign","margin","formSection","position","marginBottom","backgroundColor","padding","display","minWidth","borderRadius","boxShadow","formField","sectionHeader","color","fontSize","sectionBody","sectionFooter","flexDirection","alignItems","sectionFooterPrimaryContent","marginLeft","sectionFooterSecondaryContent","marginRight","alignSelf","input","width","fontFamily","backgroundImage","border","boxSizing","button","lineHeight","whiteSpace","verticalAlign","touchAction","cursor","userSelect","borderColor","textTransform","letterSpacing","signInButton","signInButtonIcon","left","height","signInButtonContent","overflow","textOverflow","formRow","strike","borderBottom","strikeContent","background","actionRow","a","hint","radio","inputLabel","awsmobile","MQTTSubscription","props","useState","isConnected","setIsConnected","mqttClient","setMqttClient","messages","setMessages","clientId","Math","floor","random","Auth","currentCredentials","essentialCredentials","newMqttClient","AWSIoTData","device","region","AWSConfiguration","host","protocol","maximumReconnectTimeMs","debug","accessKeyId","secretKey","secretAccessKey","sessionToken","on","subscribe","topic","console","log","payload","myDate","Date","toLocaleDateString","toLocaleTimeString","newMessage","toString","prevMessages","useEffect","connectToAwsIot","className","onSubmit","preventDefault","end","removeSubscription","type","message","index","data","CircularJSON","stringify","document","theme","JSONPrettyMon","Amplify","configure","MQTTDisplay","desiredSubscriptionTopic","setDesiredSubscriptionTopic","desiredPublishTopic","setDesiredPublishTopic","desiredPublishMessage","setDesiredPublishMessage","subscribedTopics","setSubscribedTopics","value","filter","ele","publish","onChange","target","placeholder","name","required","includes","prevTopics","DevicesPage","devices","setDevices","devicePlaying","setDevicePlaying","audioURL","setAudioURL","showAddSong","setShowAddSong","fetchDevices","toggleDevice","idx","deviceFilePath","filePath","Storage","get","express","fileAccessURL","error","API","graphql","graphqlOperation","deviceData","deviceList","listDevices","items","addLike","like","createdAt","updatedAt","updateDevice","Paper","variant","elevation","IconButton","aria-label","onClick","title","owner","description","url","controls","playing","onPause","onUpload","AddSong","songData","setSongData","mp3Data","setMp3Data","uploadSong","put","uuid","contentType","key","createSongInput","TextField","label","accept","files","config","withAuthenticator","usernameAttributes","signUpConfig","hiddenDefaults","signUpFields","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","endpoint","poolId"],"mappings":"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","file":"static/js/main.12e6989c.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t618,\n\t\t8\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t619,\n\t\t19\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t620,\n\t\t4\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t621,\n\t\t9\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t622,\n\t\t7\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t623,\n\t\t26\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t624,\n\t\t5\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t625,\n\t\t27\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t626,\n\t\t10\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t627,\n\t\t20\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t628,\n\t\t28\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t629,\n\t\t11\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t630,\n\t\t29\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t631,\n\t\t23\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t632,\n\t\t30\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t633,\n\t\t12\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t634,\n\t\t21\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t635,\n\t\t22\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t636,\n\t\t6\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t637,\n\t\t13\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t638,\n\t\t14\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t639,\n\t\t18\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t640,\n\t\t15\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t641,\n\t\t16\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t642,\n\t\t17\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t643,\n\t\t24\n\t],\n\t\"./amplify-toast.entry.js\": [\n\t\t644,\n\t\t31\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t645,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 610;\nmodule.exports = webpackAsyncContext;","const bgCol = 'white';\r\n\r\n\r\nexport const Container = {\r\n  fontWeight: '400',\r\n};\r\n\r\nexport const FormContainer = {\r\n  textAlign: 'center',\r\n  margin: '0 0',\r\n};\r\n\r\nexport const FormSection = {\r\n  position: 'relative',\r\n  marginBottom: '20px',\r\n  backgroundColor: bgCol,\r\n  padding: '35px 40px',\r\n  textAlign: 'left',\r\n  display: 'inline-block',\r\n  minWidth: '380px',\r\n  borderRadius: '6px',\r\n  boxShadow: '1px 1px 4px 0 rgba(0,0,0,0.15)',\r\n};\r\n\r\nexport const FormField = {\r\n  marginBottom: '22px',\r\n};\r\n\r\nexport const SectionHeader = {\r\n  color: '#555',\r\n  marginBottom: '30px',\r\n  fontSize: '18px',\r\n  fontWeight: '500',\r\n};\r\n\r\nexport const SectionBody = {\r\n  marginBottom: '30px',\r\n};\r\n\r\nexport const SectionFooter = {\r\n  fontSize: '14px',\r\n  color: '#708294',\r\n  display: 'flex',\r\n  flexDirection: 'row-reverse',\r\n  alignItems: 'flex-start',\r\n};\r\n\r\nexport const SectionFooterPrimaryContent = {\r\n  marginLeft: 'auto',\r\n};\r\n\r\nexport const SectionFooterSecondaryContent = {\r\n  marginRight: 'auto',\r\n  alignSelf: 'center',\r\n};\r\n\r\nexport const Input = {\r\n  display: 'block',\r\n  width: '100%',\r\n  padding: '16px',\r\n  fontSize: '14px',\r\n  fontFamily: 'inherit',\r\n  color: '#152939',\r\n  backgroundColor: '#fff',\r\n  backgroundImage: 'none',\r\n  border: '1px solid #C4C4C4',\r\n  borderRadius: '3px',\r\n  boxSizing: 'border-box',\r\n  marginBottom: '10px',\r\n};\r\n\r\nexport const Button = {\r\n  display: 'inline-block',\r\n  marginBottom: '0',\r\n  fontSize: '12px',\r\n  fontWeight: 800,\r\n  borderRadius: '0.25em',\r\n  lineHeight: '1.42857143',\r\n  textAlign: 'center',\r\n  whiteSpace: 'nowrap',\r\n  verticalAlign: 'middle',\r\n  touchAction: 'manipulation',\r\n  cursor: 'pointer',\r\n  userSelect: 'none',\r\n  backgroundImage: 'none',\r\n  color: '#fff',\r\n  backgroundColor: '#2673B6',\r\n  borderColor: '#ccc',\r\n  textTransform: 'uppercase',\r\n  padding: '1em 1em',\r\n  letterSpacing: '1.1px',\r\n  border: 'none',\r\n};\r\n\r\nexport const SignInButton = {\r\n  position: 'relative',\r\n  width: '100%',\r\n  borderRadius: '4px',\r\n  marginBottom: '10px',\r\n  cursor: 'pointer',\r\n  padding: 0,\r\n  fontFamily: 'Amazon Ember',\r\n  color: '#fff',\r\n  fontSize: '14px',\r\n  '#google_signin_btn': {\r\n    backgroundColor: '#4285F4',\r\n    fontFamily: 'Roboto',\r\n    border: '1px solid #4285F4',\r\n  },\r\n  '#facebook_signin_btn': {\r\n    backgroundColor: '#4267B2',\r\n    borderColor: '#4267B2',\r\n  },\r\n  '#amazon_signin_btn': {\r\n    backgroundColor: '#2673B6',\r\n    border: 'none',\r\n  },\r\n};\r\n\r\nexport const SignInButtonIcon = {\r\n  position: 'absolute',\r\n  left: 0,\r\n  '#google_signin_btn_icon': {\r\n    backgroundColor: '#fff',\r\n    borderRadius: '4px 0 0 4px',\r\n    height: '30px',\r\n    width: '30px',\r\n    padding: '11px',\r\n  },\r\n  '#facebook_signin_btn_icon': {\r\n    height: '33px',\r\n    width: '18px',\r\n    padding: '10px 14px',\r\n  },\r\n  '#amazon_signin_btn_icon': {\r\n    padding: '10px',\r\n    height: '32px',\r\n    width: '32px',\r\n  },\r\n};\r\n\r\nexport const SignInButtonContent = {\r\n  display: 'block',\r\n  padding: '18px 0',\r\n  whiteSpace: 'nowrap',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  textAlign: 'center',\r\n};\r\n\r\nexport const Strike = {\r\n  width: '100%',\r\n  textAlign: 'center',\r\n  borderBottom: '1px solid #bbb',\r\n  lineHeight: '0.1em',\r\n  margin: '32px 0',\r\n  color: '#828282',\r\n};\r\n\r\nexport const StrikeContent = {\r\n  background: '#fff',\r\n  padding: '0 25px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n};\r\n\r\nexport const ActionRow = {\r\n  marginBottom: '15px',\r\n};\r\n\r\nexport const FormRow = {\r\n  marginBottom: '12px',\r\n};\r\n\r\nexport const A = {\r\n  color: '#2673B6',\r\n  cursor: 'pointer',\r\n};\r\n\r\nexport const Hint = {\r\n  color: '#828282',\r\n  fontSize: '12px',\r\n};\r\n\r\nexport const Radio = {\r\n  marginRight: '18px',\r\n  verticalAlign: 'bottom',\r\n};\r\n\r\nexport const InputLabel = {\r\n  color: '#8596a6',\r\n  fontSize: '14px',\r\n  marginBottom: '8px',\r\n};\r\n\r\nconst Bootstrap = {\r\n  container: Container,\r\n  formContainer: FormContainer,\r\n  formSection: FormSection,\r\n  formField: FormField,\r\n\r\n  sectionHeader: SectionHeader,\r\n  sectionBody: SectionBody,\r\n  sectionFooter: SectionFooter,\r\n  sectionFooterPrimaryContent: SectionFooterPrimaryContent,\r\n  sectionFooterSecondaryContent: SectionFooterSecondaryContent,\r\n\r\n  input: Input,\r\n  button: Button,\r\n  signInButton: SignInButton,\r\n  signInButtonIcon: SignInButtonIcon,\r\n  signInButtonContent: SignInButtonContent,\r\n  formRow: FormRow,\r\n  strike: Strike,\r\n  strikeContent: StrikeContent,\r\n  actionRow: ActionRow,\r\n  a: A,\r\n\r\n  hint: Hint,\r\n  radio: Radio,\r\n  inputLabel: InputLabel,\r\n};\r\n\r\nexport default Bootstrap;\r\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:03891ae7-7076-40be-abb1-b1aaf38c6be9\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_Zbdxd4Rtj\",\n    \"aws_user_pools_web_client_id\": \"3dcoc9vfmjvamf7gjms56p2a41\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"https://vhqverodsrh4rlz7coombiqodq.appsync-api.us-west-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-west-2\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_user_files_s3_bucket\": \"device-storage162253-prod\",\n    \"aws_user_files_s3_bucket_region\": \"us-west-2\"\n};\n\n\nexport default awsmobile;\n","import React, { useState, useEffect } from 'react';\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport awsmobile from './aws-exports';\r\nimport AWSIoTData from 'aws-iot-device-sdk';\r\nimport AWSConfiguration from './aws-iot-configuration.js';\r\nimport Pretty from 'react-json-pretty';\r\nimport JSONPrettyMon from 'react-json-pretty/dist/monikai';\r\nimport CircularJSON from'circular-json';\r\nAmplify.configure(awsmobile);\r\n\r\n/*\r\n    Note - I attempted to use Amplify PubSub for IoT message handling but found that\r\n    it lacked adequate functionality to handle multiple subscriptions easily. Therefore, \r\n    I opted to use aws-iot-devide-sdk which proved much easier to use. \r\n*/\r\n\r\n//######################################################################################\r\nfunction arrayRemove(arr, value) {\r\n  // REMOVE SPECIFIC ITEM BY VALUE FROM AN ARRAY\r\n  //https://love2dev.com/blog/javascript-remove-from-array/\r\n  return arr.filter(function(ele){\r\n      return ele !== value;\r\n  });\r\n\r\n}\r\n//######################################################################################\r\n\r\nfunction MQTTDisplay(props) {\r\n  // ALLOW USER TO SUBSCRIBE TO MQTT TOPICS\r\n\r\n  const [desiredSubscriptionTopic, setDesiredSubscriptionTopic] = useState(\"$aws/things/BEWP1-080027E90EDA/shadow/get/accepted\");\r\n  const [desiredPublishTopic,   setDesiredPublishTopic]   = useState(\"$aws/things/BEWP1-080027E90EDA/shadow/get\");\r\n  const [desiredPublishMessage, setDesiredPublishMessage] = useState(`{ \"message\": \"Hello\" }`);\r\n  const [subscribedTopics, setSubscribedTopics] = useState([]);\r\n  \r\n  // isConnected and mqttClient strictly used for publishing;\r\n  // Subscriptions are instead handled in child MQTTSubscription components\r\n  const [isConnected, setIsConnected]   = useState(false);\r\n  const [mqttClient, setMqttClient]     = useState();\r\n\r\n  useEffect(() => {\r\n    \r\n    connectToAwsIot();\r\n  \r\n  },[]);  // the empty [] ensures only run once\r\n\r\n  async function connectToAwsIot() {\r\n    // This connection/function is only for publishing messages;\r\n    // Subscriptions each get their own child object with separate connections.\r\n\r\n    // mqtt clients require a unique clientId; we generate one below\r\n    var clientId = 'mqtt-explorer-' + (Math.floor((Math.random() * 100000) + 1));\r\n\r\n    console.log(`clientId: ${clientId}`)\r\n\r\n    // get credentials and, from them, extract key, secret key, and session token\r\n    // Amplify's auth functionality makes this easy for us...\r\n    var currentCredentials = await Auth.currentCredentials();\r\n    var essentialCredentials = Auth.essentialCredentials(currentCredentials);\r\n\r\n    console.log(`clientId: ${clientId}`)\r\n    console.log(`currentCredentials: ${currentCredentials}`)\r\n    console.log(`essentialCredentials: ${essentialCredentials}`)\r\n    console.log(`AWSConfiguration.host: ${AWSConfiguration.host}`)\r\n    \r\n\r\n    // Create an MQTT client\r\n    var newMqttClient = AWSIoTData.device({\r\n      region: AWSConfiguration.region,\r\n      host:AWSConfiguration.host,\r\n      clientId: clientId,\r\n      protocol: 'wss',\r\n      maximumReconnectTimeMs: 8000,\r\n      debug: true,\r\n      accessKeyId:  essentialCredentials.accessKeyId,\r\n      secretKey:    essentialCredentials.secretAccessKey,\r\n      sessionToken: essentialCredentials.sessionToken\r\n    });\r\n\r\n    // On connect, update status\r\n    newMqttClient.on('connect', function() {\r\n      setIsConnected(true);\r\n      console.log('Publisher connected to AWS IoT.');\r\n    });\r\n\r\n    // update state to track mqtt client\r\n    setMqttClient(newMqttClient);\r\n\r\n  }\r\n\r\n  function removeSubscription(topic) {\r\n    // This function is passed to child components\r\n    setSubscribedTopics(arrayRemove(subscribedTopics,topic));\r\n  }\r\n\r\n  function handleSubscriptionRequest(e) {\r\n    // stop submit button from refreshing entire page\r\n    e.preventDefault();\r\n\r\n    if (subscribedTopics.includes(desiredSubscriptionTopic)) {\r\n      console.log(`You are already subscribed to topic '${desiredSubscriptionTopic}'!`);\r\n    }\r\n    else {\r\n      setSubscribedTopics(prevTopics => [...prevTopics, desiredSubscriptionTopic]);\r\n      console.log(`Subscribed to topic '${desiredSubscriptionTopic}'!`);\r\n    }\r\n  }\r\n\r\n  function handlePublishRequest(e) {\r\n    // stop submit button from refreshing entire page\r\n    e.preventDefault();\r\n  \r\n    mqttClient.publish(desiredPublishTopic, desiredPublishMessage);\r\n  \r\n  }\r\n\r\n    return (\r\n      <div className=\"MQTTDisplay\">\r\n        <div className=\"thin-border\">\r\n          <b>Publisher status:</b> {isConnected ? \"connected\" : \"Not connected\"}\r\n          <br/><br/> \r\n          <form onSubmit={handlePublishRequest}>\r\n          <b>Publish to Topic:</b>\r\n            <br/>\r\n            <input\r\n              value={desiredPublishTopic}\r\n              onChange={e => setDesiredPublishTopic(e.target.value)}\r\n              placeholder=\"IoT Topic\"\r\n              type=\"text\"\r\n              name=\"desiredPublishTopic\"\r\n              required\r\n            />\r\n            <br/><br/>\r\n            <b>Publish Message:</b>\r\n            <br/>\r\n            <input\r\n              value={desiredPublishMessage}\r\n              onChange={e => setDesiredPublishMessage(e.target.value)}\r\n              placeholder=\"IoT Topic\"\r\n              type=\"text\"\r\n              name=\"desiredPublishTopic\"\r\n              required\r\n            />\r\n            <br/><br/>\r\n            <button type=\"submit\">Publish</button>   \r\n            <br/>\r\n          </form>\r\n        </div>\r\n        <br/>\r\n        <div className=\"thin-border\">\r\n          <form onSubmit={handleSubscriptionRequest}>\r\n            <b>Subscribe to Topic:</b>\r\n            <br/>\r\n            <input\r\n              value={desiredSubscriptionTopic}\r\n              onChange={e => setDesiredSubscriptionTopic(e.target.value)}\r\n              placeholder=\"IoT Topic\"\r\n              type=\"text\"\r\n              name=\"desiredSubscriptionTopic\"\r\n              required\r\n            />\r\n            <button type=\"submit\">Subscribe</button>   \r\n            <br/><br/>\r\n          </form>\r\n  \r\n          <b>Subscriptions:</b> <br/>\r\n          {subscribedTopics.map(topic => {\r\n            return (<MQTTSubscription key={topic} topic={topic} removeSubscription={removeSubscription}/>)\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n//######################################################################################\r\nfunction MQTTSubscription(props) {\r\n\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [mqttClient, setMqttClient]   = useState();\r\n  const [messages, setMessages]       = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    connectToAwsIot();\r\n\r\n    return () => {\r\n      // this gets called when component is destroyed...\r\n      //https://github.com/mqttjs/MQTT.js/blob/master/README.md#end    \r\n      console.log(`Ended subscription to '${props.topic}'...`);\r\n    };\r\n\r\n  },[]); // the \"[]\" causes this to execute just once\r\n\r\n  async function connectToAwsIot() {\r\n\r\n    // mqtt clients require a unique clientId; we generate one below\r\n    var clientId = 'mqtt-explorer-' + (Math.floor((Math.random() * 100000) + 1));\r\n\r\n    // get credentials and, from them, extract key, secret key, and session token\r\n    // Amplify's auth functionality makes this easy for us...\r\n    var currentCredentials = await Auth.currentCredentials();\r\n    var essentialCredentials = Auth.essentialCredentials(currentCredentials);\r\n    \r\n    // Create an MQTT client\r\n    var newMqttClient = AWSIoTData.device({\r\n      region: AWSConfiguration.region,\r\n      host:AWSConfiguration.host,\r\n      clientId: clientId,\r\n      protocol: 'wss',\r\n      maximumReconnectTimeMs: 8000,\r\n      debug: true,\r\n      accessKeyId:  essentialCredentials.accessKeyId,\r\n      secretKey:    essentialCredentials.secretAccessKey,\r\n      sessionToken: essentialCredentials.sessionToken\r\n     });\r\n\r\n    // On connect, update status\r\n    newMqttClient.on('connect', function() {\r\n      setIsConnected(true);\r\n      newMqttClient.subscribe(props.topic);\r\n      console.log('Connected to AWS IoT!');\r\n      console.log(`Subscribed to ${props.topic}`);\r\n    \r\n    });\r\n\r\n    // add event handler for received messages\r\n    newMqttClient.on('message', function(topic, payload) {\r\n      var myDate = new Date().toLocaleDateString() + \" \" + new Date().toLocaleTimeString();\r\n      var newMessage =  `${myDate} - topic '${topic}' - \\n ${payload.toString()}`;\r\n      setMessages(prevMessages => [...prevMessages, newMessage]);\r\n      console.log(newMessage);\r\n    });\r\n\r\n    // update state to track mqtt clientw687888\r\n\r\n    setMqttClient(newMqttClient);\r\n\r\n  }\r\n\r\n  function handleUnsubscribe(e) {\r\n    // stop submit button from refreshing entire page\r\n    e.preventDefault();\r\n\r\n    // end subscription; I think this could be added to the return() of the useEffect(), as an \"onUnmount\" handler,\r\n    // but I received an erropr when I tried it. I might be doing something wrong but for now, it works with the commands\r\n    // below... \r\n    mqttClient.end(false); \r\n    setIsConnected(false);\r\n\r\n    // remove subscription from parent component, thus killing this component...\r\n    props.removeSubscription(props.topic);\r\n  }\r\n\r\n  return (\r\n    <div className=\"MQTTSubscription\">\r\n      Topic Filter: \"{props.topic}\" ({isConnected ? \"connected\" : \"not connected\"})\r\n      <form onSubmit={handleUnsubscribe}>\r\n        <button type=\"submit\">Unsubscribe</button>\r\n      </form>\r\n      <br/><br/>\r\n\r\n      {messages.map((message,index) => {\r\n        return (\r\n          <li key={index} className=\"markdown\">\r\n            {\r\n              \r\n              <Pretty data={CircularJSON.stringify(document)} theme={JSONPrettyMon} />\r\n            }\r\n          </li>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MQTTDisplay;","import { Paper, IconButton, TextField } from '@material-ui/core';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nimport { API, graphqlOperation, Storage } from 'aws-amplify';\r\nimport { listDevices } from '../graphql/queries'\r\nimport { updateDevice, createDevice } from '../graphql/mutations'\r\nimport { useState, useEffect } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nfunction DevicesPage(props) {\r\n\r\n    const [devices, setDevices] = useState([]);\r\n    const [devicePlaying, setDevicePlaying] = useState('');\r\n    const [audioURL, setAudioURL] = useState('');\r\n    const [showAddSong, setShowAddSong] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      fetchDevices();\r\n    }, [])\r\n  \r\n    const toggleDevice = async idx => {\r\n      if (devicePlaying === idx) {\r\n        setDevicePlaying('')\r\n        return\r\n      }\r\n\r\n      const deviceFilePath = devices[idx].filePath;\r\n      try {\r\n        const fileAccessURL = await Storage.get(deviceFilePath, { express: 60 })\r\n        console.log('access url', fileAccessURL);\r\n        setDevicePlaying(idx);\r\n        setAudioURL(fileAccessURL);\r\n        return;\r\n      } catch (error) {\r\n        console.error('error accessing the file s3', error);\r\n        setAudioURL('');\r\n        setDevicePlaying('');\r\n      }\r\n\r\n    }\r\n\r\n    const fetchDevices = async () => {\r\n      try {\r\n        const deviceData = await API.graphql(graphqlOperation(listDevices));\r\n        const deviceList = deviceData.data.listDevices.items;\r\n        console.log('Device list', deviceList);\r\n        setDevices(deviceList);\r\n      } catch (error) {\r\n        console.log('error on fetching devices', error);\r\n      }\r\n    };\r\n  \r\n    const addLike = async (idx) => {\r\n        try {\r\n            const device = devices[idx];\r\n            device.like = device.like + 1;\r\n            delete device.createdAt;\r\n            delete device.updatedAt;\r\n          \r\n            const deviceData =await API.graphql(graphqlOperation(updateDevice, { input: device}));\r\n            const deviceList = [...devices];\r\n            deviceList[idx] = deviceData.data.updateDevice;\r\n            setDevices(deviceList);\r\n\r\n        } catch (error) {\r\n            console.log('error on adding Like to device', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"deviceList\">\r\n          {devices.map((device, idx) => {\r\n            return <Paper variant=\"outlined\" elevation={2} key={`device${idx}`}>\r\n              <div className=\"deviceCard\">\r\n                <IconButton aria-label=\"play\" onClick={() => toggleDevice(idx)} >\r\n                  { devicePlaying === idx ? <PauseIcon /> : <PlayArrowIcon />}\r\n                  \r\n                </IconButton>\r\n                <div>\r\n                  <div className=\"deviceTitle\">{device.title}</div>\r\n                  <div className=\"deviceOwner\">{device.owner}</div>\r\n                </div>  \r\n                <div> \r\n                  <IconButton aria-label=\"like\" onClick={() => addLike(idx)}>\r\n                    <FavoriteIcon />\r\n                  </IconButton>\r\n                  {device.like}\r\n                </div>\r\n                <div className=\"deviceDescription\">{device.description}</div>\r\n                <br/>\r\n              </div>\r\n              { devicePlaying === idx ? (\r\n                  <div className='AudioPlayer'>\r\n                    <ReactPlayer \r\n                      url={audioURL}\r\n                      controls\r\n                      playing\r\n                      height=\"50px\"\r\n                      onPause={() => toggleDevice(idx)}\r\n                    />\r\n                  </div>\r\n              ) : null }\r\n            </Paper>;  \r\n          })}\r\n          {\r\n            showAddSong ? (\r\n              <AddSong onUpload={() => {\r\n                setShowAddSong(false)\r\n                fetchDevices()\r\n              }} />\r\n            ) : (\r\n                  <IconButton onClick={() => setShowAddSong(true)}> \r\n                    <AddIcon />\r\n                  </IconButton>\r\n            )  \r\n          }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DevicesPage;\r\n\r\nconst AddSong = ({onUpload}) => {\r\n\r\n  const [songData, setSongData] = useState({});\r\n  const [mp3Data, setMp3Data] = useState()\r\n\r\n  const uploadSong = async () => {\r\n    //Upload the song\r\n    console.log('songData', songData);\r\n    const { title, description, owner } = songData;\r\n\r\n    const { key } = await Storage.put(`${uuid()}.mp3`, mp3Data, {contentType: 'audio/mp3'});\r\n\r\n    const createSongInput = { \r\n      id: uuid(),\r\n      title, \r\n      description,\r\n      owner,\r\n      filePath: key,\r\n      like: 0\r\n    }\r\n    await API.graphql(graphqlOperation(createDevice, {input: createSongInput}))\r\n    onUpload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"newSong\">\r\n      <TextField \r\n        label=\"Title\" \r\n        value={songData.title} \r\n        onChange={e => setSongData({...songData, title:e.target.value})} />\r\n      <TextField \r\n        label=\"Artist\" \r\n        value={songData.owner} \r\n        onChange={e => setSongData({...songData, owner:e.target.value})} />\r\n      <TextField \r\n        label=\"Description\" \r\n        value={songData.description} \r\n        onChange={e => setSongData({...songData, description:e.target.value})} />\r\n      <input type=\"file\" accept=\"audio/mp3\" onChange={e => setMp3Data(e.target.files[0])} /> \r\n      <IconButton onClick={uploadSong}>\r\n        <PublishIcon />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getDevice = /* GraphQL */ `\n  query GetDevice($id: ID!) {\n    getDevice(id: $id) {\n      id\n      title\n      description\n      filePath\n      like\n      owner\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listDevices = /* GraphQL */ `\n  query ListDevices(\n    $filter: ModelDeviceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listDevices(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        title\n        description\n        filePath\n        like\n        owner\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createDevice = /* GraphQL */ `\n  mutation CreateDevice(\n    $input: CreateDeviceInput!\n    $condition: ModelDeviceConditionInput\n  ) {\n    createDevice(input: $input, condition: $condition) {\n      id\n      title\n      description\n      filePath\n      like\n      owner\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateDevice = /* GraphQL */ `\n  mutation UpdateDevice(\n    $input: UpdateDeviceInput!\n    $condition: ModelDeviceConditionInput\n  ) {\n    updateDevice(input: $input, condition: $condition) {\n      id\n      title\n      description\n      filePath\n      like\n      owner\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteDevice = /* GraphQL */ `\n  mutation DeleteDevice(\n    $input: DeleteDeviceInput!\n    $condition: ModelDeviceConditionInput\n  ) {\n    deleteDevice(input: $input, condition: $condition) {\n      id\n      title\n      description\n      filePath\n      like\n      owner\n      createdAt\n      updatedAt\n    }\n  }\n`;\n","import './App.css';\r\nimport Amplify from 'aws-amplify';\r\nimport {  withAuthenticator } from \"aws-amplify-react\";\r\nimport { AmplifySignOut } from \"@aws-amplify/ui-react\";\r\n\r\nimport Bootstrap from \"./theme\";\r\nimport config from \"./aws-exports\";\r\n\r\nimport MQTTDisplay from './MQTTDisplay';\r\nimport DevicesPage from './components/DevicesPage';\r\n\r\nAmplify.configure(config);\r\n\r\nfunction App(props) {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n          AWS S3 \r\n          <AmplifySignOut />\r\n      </header>\r\n      <br/>\r\n      <DevicesPage {...props} />\r\n      <br/>\r\n      <header className=\"App-header\">\r\n          AWS IOT \r\n      </header>\r\n      <br/>\r\n      <MQTTDisplay {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAuthenticator(App, {\r\n  theme: Bootstrap,\r\n  usernameAttributes: 'email',\r\n  signUpConfig: {\r\n     hiddenDefaults: [\"phone_number\"],\r\n     signUpFields: [{ key: 'name', label: 'Name',required: true }]\r\n}\r\n}, true);\r\n\r\n// export default withAuthenticator(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var awsIotConfiguration = {\r\n    endpoint: 'wss://a39wmtgd8xhgpw-ats.iot.us-west-2.amazonaws.com/mqtt', \r\n    region: 'us-west-2',\r\n    poolId: 'us-west-2:03891ae7-7076-40be-abb1-b1aaf38c6be9',\r\n    host: 'a39wmtgd8xhgpw-ats.iot.us-west-2.amazonaws.com'\r\n  };\r\n module.exports = awsIotConfiguration;"],"sourceRoot":""}